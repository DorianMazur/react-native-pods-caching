project_name= "reactNativePodsCaching"
scheme = project_name
build_configuration = "Release"
cached_derived_data_path = File.expand_path("../cached_derived_data")
cache_folder = File.expand_path("#{cached_derived_data_path}/Build/Intermediates.noindex/ArchiveIntermediates/#{scheme}/BuildProductsPath/#{build_configuration}-iphoneos")

default_platform(:ios)

platform :ios do
  desc "Build iOS"
  lane :build do

    if(File.exist?(cache_folder))
      fastlane_require 'xcodeproj'
      project = Xcodeproj::Project.open("../#{project_name}.xcodeproj")
      target = project.targets.select { |target| target.name == project_name }.first
      phase = target.shell_script_build_phases.select { |phase| phase.name && phase.name.include?('Copy Pods Resources') }.first
      if (!phase.shell_script.start_with?('BUILT_PRODUCTS_DIR'))
        phase.shell_script = "BUILT_PRODUCTS_DIR=#{cache_folder} #{phase.shell_script}"
        project.save()
      end

      gym(
        clean: false,
        project: "./#{project_name}.xcodeproj",
        scheme: scheme,
        configuration: build_configuration,
        skip_codesigning: true,
        skip_package_ipa: true,
        destination: 'generic/platform=iOS',
        xcargs: [
            # Provide paths where xcode can't find pods binaries
            "PODS_CONFIGURATION_BUILD_DIR=#{cache_folder}",
            "FRAMEWORK_SEARCH_PATHS='#{cache_folder} $(inherited)'",
            "LIBRARY_SEARCH_PATHS='#{cache_folder} $(inherited)'",
            "SWIFT_INCLUDE_PATHS=#{cache_folder}"
        ].join(" ")
      )
    else

      gym(
        scheme: scheme,
        workspace: "./#{project_name}.xcworkspace",
        derived_data_path: cached_derived_data_path,
        skip_codesigning: true,
        skip_package_ipa: true,
        configuration: build_configuration,
        clean: true
      )


      # Remove not a Pods binaries to reduce cache size
      require 'fileutils';
      dirs = [
        File.expand_path("#{cached_derived_data_path}/info.plist"),
        File.expand_path("#{cached_derived_data_path}/Logs"),
        File.expand_path("#{cached_derived_data_path}/SourcePackages"),
        File.expand_path("#{cached_derived_data_path}/ModuleCache.noindex"),
        File.expand_path("#{cached_derived_data_path}/Build/Intermediates.noindex/ArchiveIntermediates/MyApp/IntermediateBuildFilesPath/MyApp.build"),
        File.expand_path("#{cached_derived_data_path}/Build/Intermediates.noindex/ArchiveIntermediates/MyApp/IntermediateBuildFilesPath/XCBuildData"),
        File.expand_path("#{cached_derived_data_path}/Build/Intermediates.noindex/ArchiveIntermediates/MyApp/BuildProductsPath/SwiftSupport"),
        File.expand_path("#{cached_derived_data_path}/Build/Intermediates.noindex/ArchiveIntermediates/MyApp/PrecompiledHeaders")
      ]
      dirs.each { |dir| FileUtils.rm_rf(dir) }
    end

  end
end
